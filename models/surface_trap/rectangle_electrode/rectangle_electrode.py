#!/usr/bin/env python
# -*- coding:utf-8 -*-
#
# Created: Tue 25 Apr 2023
# Author: Carmelo Mordini <cmordini@phys.ethz.ch>
#
# Analytical functions for rectangle electrodes in a SET - generated in Mathematica
# ref: M.G.House, Phys.Rev.A 78, 033402 (2008)
# https://doi.org/10.1103/PhysRevA.78.033402
#
# flake8: noqa

import numpy as np
from numpy import arctan as ArcTan
from numpy import sqrt as Sqrt
from numpy import pi as Pi


def rect_el_potential(x, y, z, x1, x2, y1, y2):
    return (ArcTan(((-x + x1)*(-y + y1))/(z*Sqrt((-x + x1)**2 + (-y + y1)**2 + z**2))) - ArcTan(((-x + x2)*(-y + y1))/(z*Sqrt((-x + x2)**2 + (-y + y1)**2 + z**2))) - ArcTan(((-x + x1)*(-y + y2))/(z*Sqrt((-x + x1)**2 + (-y + y2)**2 + z**2))) + ArcTan(((-x + x2)*(-y + y2))/(z*Sqrt((-x + x2)**2 + (-y + y2)**2 + z**2))))/(2.*Pi)

def rect_el_gradient(x, y, z, x1, x2, y1, y2):
    return np.stack([((((-x + x1)**2*(-y + y1))/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5) - (-y + y1)/(z*Sqrt((-x + x1)**2 + (-y + y1)**2 + z**2)))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2))) - (((-x + x2)**2*(-y + y1))/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5) - (-y + y1)/(z*Sqrt((-x + x2)**2 + (-y + y1)**2 + z**2)))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2))) - (((-x + x1)**2*(-y + y2))/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5) - (-y + y2)/(z*Sqrt((-x + x1)**2 + (-y + y2)**2 + z**2)))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2))) + (((-x + x2)**2*(-y + y2))/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5) - (-y + y2)/(z*Sqrt((-x + x2)**2 + (-y + y2)**2 + z**2)))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2))))/(2.*Pi),((((-x + x1)*(-y + y1)**2)/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5) - (-x + x1)/(z*Sqrt((-x + x1)**2 + (-y + y1)**2 + z**2)))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2))) - (((-x + x2)*(-y + y1)**2)/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5) - (-x + x2)/(z*Sqrt((-x + x2)**2 + (-y + y1)**2 + z**2)))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2))) - (((-x + x1)*(-y + y2)**2)/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5) - (-x + x1)/(z*Sqrt((-x + x1)**2 + (-y + y2)**2 + z**2)))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2))) + (((-x + x2)*(-y + y2)**2)/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5) - (-x + x2)/(z*Sqrt((-x + x2)**2 + (-y + y2)**2 + z**2)))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2))))/(2.*Pi),((-(((-x + x1)*(-y + y1))/((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5) - ((-x + x1)*(-y + y1))/(z**2*Sqrt((-x + x1)**2 + (-y + y1)**2 + z**2)))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2))) - (-(((-x + x2)*(-y + y1))/((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5) - ((-x + x2)*(-y + y1))/(z**2*Sqrt((-x + x2)**2 + (-y + y1)**2 + z**2)))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2))) - (-(((-x + x1)*(-y + y2))/((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5) - ((-x + x1)*(-y + y2))/(z**2*Sqrt((-x + x1)**2 + (-y + y2)**2 + z**2)))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2))) + (-(((-x + x2)*(-y + y2))/((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5) - ((-x + x2)*(-y + y2))/(z**2*Sqrt((-x + x2)**2 + (-y + y2)**2 + z**2)))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2))))/(2.*Pi)], axis=-1)

def rect_el_hessian(x, y, z, x1, x2, y1, y2):
    xx = (((3*(-x + x1)**3*(-y + y1))/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**2.5) - (3*(-x + x1)*(-y + y1))/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2))) - (((2*(-x + x1)**3*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)**2) - (2*(-x + x1)*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)))*(((-x + x1)**2*(-y + y1))/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5) - (-y + y1)/(z*Sqrt((-x + x1)**2 + (-y + y1)**2 + z**2))))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)))**2 - ((3*(-x + x2)**3*(-y + y1))/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**2.5) - (3*(-x + x2)*(-y + y1))/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2))) + (((2*(-x + x2)**3*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)**2) - (2*(-x + x2)*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)))*(((-x + x2)**2*(-y + y1))/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5) - (-y + y1)/(z*Sqrt((-x + x2)**2 + (-y + y1)**2 + z**2))))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)))**2 - ((3*(-x + x1)**3*(-y + y2))/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**2.5) - (3*(-x + x1)*(-y + y2))/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2))) + (((2*(-x + x1)**3*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)**2) - (2*(-x + x1)*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)))*(((-x + x1)**2*(-y + y2))/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5) - (-y + y2)/(z*Sqrt((-x + x1)**2 + (-y + y2)**2 + z**2))))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)))**2 + ((3*(-x + x2)**3*(-y + y2))/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**2.5) - (3*(-x + x2)*(-y + y2))/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2))) - (((2*(-x + x2)**3*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)**2) - (2*(-x + x2)*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)))*(((-x + x2)**2*(-y + y2))/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5) - (-y + y2)/(z*Sqrt((-x + x2)**2 + (-y + y2)**2 + z**2))))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)))**2)/(2.*Pi)
    xy = (((3*(-x + x1)**2*(-y + y1)**2)/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**2.5) - (-x + x1)**2/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5) - (-y + y1)**2/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5) + 1/(z*Sqrt((-x + x1)**2 + (-y + y1)**2 + z**2)))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2))) - (((2*(-x + x1)**2*(-y + y1)**3)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)**2) - (2*(-x + x1)**2*(-y + y1))/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)))*(((-x + x1)**2*(-y + y1))/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5) - (-y + y1)/(z*Sqrt((-x + x1)**2 + (-y + y1)**2 + z**2))))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)))**2 - ((3*(-x + x2)**2*(-y + y1)**2)/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**2.5) - (-x + x2)**2/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5) - (-y + y1)**2/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5) + 1/(z*Sqrt((-x + x2)**2 + (-y + y1)**2 + z**2)))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2))) + (((2*(-x + x2)**2*(-y + y1)**3)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)**2) - (2*(-x + x2)**2*(-y + y1))/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)))*(((-x + x2)**2*(-y + y1))/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5) - (-y + y1)/(z*Sqrt((-x + x2)**2 + (-y + y1)**2 + z**2))))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)))**2 - ((3*(-x + x1)**2*(-y + y2)**2)/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**2.5) - (-x + x1)**2/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5) - (-y + y2)**2/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5) + 1/(z*Sqrt((-x + x1)**2 + (-y + y2)**2 + z**2)))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2))) + (((2*(-x + x1)**2*(-y + y2)**3)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)**2) - (2*(-x + x1)**2*(-y + y2))/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)))*(((-x + x1)**2*(-y + y2))/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5) - (-y + y2)/(z*Sqrt((-x + x1)**2 + (-y + y2)**2 + z**2))))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)))**2 + ((3*(-x + x2)**2*(-y + y2)**2)/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**2.5) - (-x + x2)**2/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5) - (-y + y2)**2/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5) + 1/(z*Sqrt((-x + x2)**2 + (-y + y2)**2 + z**2)))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2))) - (((2*(-x + x2)**2*(-y + y2)**3)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)**2) - (2*(-x + x2)**2*(-y + y2))/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)))*(((-x + x2)**2*(-y + y2))/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5) - (-y + y2)/(z*Sqrt((-x + x2)**2 + (-y + y2)**2 + z**2))))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)))**2)/(2.*Pi)
    xz = (((-3*(-x + x1)**2*(-y + y1))/((-x + x1)**2 + (-y + y1)**2 + z**2)**2.5 + (-y + y1)/((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5 - ((-x + x1)**2*(-y + y1))/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5) + (-y + y1)/(z**2*Sqrt((-x + x1)**2 + (-y + y1)**2 + z**2)))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2))) - (((-2*(-x + x1)**2*(-y + y1)**2)/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**2) - (2*(-x + x1)**2*(-y + y1)**2)/(z**3*((-x + x1)**2 + (-y + y1)**2 + z**2)))*(((-x + x1)**2*(-y + y1))/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5) - (-y + y1)/(z*Sqrt((-x + x1)**2 + (-y + y1)**2 + z**2))))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)))**2 - ((-3*(-x + x2)**2*(-y + y1))/((-x + x2)**2 + (-y + y1)**2 + z**2)**2.5 + (-y + y1)/((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5 - ((-x + x2)**2*(-y + y1))/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5) + (-y + y1)/(z**2*Sqrt((-x + x2)**2 + (-y + y1)**2 + z**2)))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2))) + (((-2*(-x + x2)**2*(-y + y1)**2)/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**2) - (2*(-x + x2)**2*(-y + y1)**2)/(z**3*((-x + x2)**2 + (-y + y1)**2 + z**2)))*(((-x + x2)**2*(-y + y1))/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5) - (-y + y1)/(z*Sqrt((-x + x2)**2 + (-y + y1)**2 + z**2))))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)))**2 - ((-3*(-x + x1)**2*(-y + y2))/((-x + x1)**2 + (-y + y2)**2 + z**2)**2.5 + (-y + y2)/((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5 - ((-x + x1)**2*(-y + y2))/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5) + (-y + y2)/(z**2*Sqrt((-x + x1)**2 + (-y + y2)**2 + z**2)))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2))) + (((-2*(-x + x1)**2*(-y + y2)**2)/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**2) - (2*(-x + x1)**2*(-y + y2)**2)/(z**3*((-x + x1)**2 + (-y + y2)**2 + z**2)))*(((-x + x1)**2*(-y + y2))/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5) - (-y + y2)/(z*Sqrt((-x + x1)**2 + (-y + y2)**2 + z**2))))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)))**2 + ((-3*(-x + x2)**2*(-y + y2))/((-x + x2)**2 + (-y + y2)**2 + z**2)**2.5 + (-y + y2)/((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5 - ((-x + x2)**2*(-y + y2))/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5) + (-y + y2)/(z**2*Sqrt((-x + x2)**2 + (-y + y2)**2 + z**2)))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2))) - (((-2*(-x + x2)**2*(-y + y2)**2)/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**2) - (2*(-x + x2)**2*(-y + y2)**2)/(z**3*((-x + x2)**2 + (-y + y2)**2 + z**2)))*(((-x + x2)**2*(-y + y2))/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5) - (-y + y2)/(z*Sqrt((-x + x2)**2 + (-y + y2)**2 + z**2))))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)))**2)/(2.*Pi)
    yy = (((3*(-x + x1)*(-y + y1)**3)/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**2.5) - (3*(-x + x1)*(-y + y1))/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2))) - (((2*(-x + x1)**2*(-y + y1)**3)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)**2) - (2*(-x + x1)**2*(-y + y1))/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)))*(((-x + x1)*(-y + y1)**2)/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5) - (-x + x1)/(z*Sqrt((-x + x1)**2 + (-y + y1)**2 + z**2))))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)))**2 - ((3*(-x + x2)*(-y + y1)**3)/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**2.5) - (3*(-x + x2)*(-y + y1))/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2))) + (((2*(-x + x2)**2*(-y + y1)**3)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)**2) - (2*(-x + x2)**2*(-y + y1))/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)))*(((-x + x2)*(-y + y1)**2)/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5) - (-x + x2)/(z*Sqrt((-x + x2)**2 + (-y + y1)**2 + z**2))))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)))**2 - ((3*(-x + x1)*(-y + y2)**3)/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**2.5) - (3*(-x + x1)*(-y + y2))/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2))) + (((2*(-x + x1)**2*(-y + y2)**3)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)**2) - (2*(-x + x1)**2*(-y + y2))/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)))*(((-x + x1)*(-y + y2)**2)/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5) - (-x + x1)/(z*Sqrt((-x + x1)**2 + (-y + y2)**2 + z**2))))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)))**2 + ((3*(-x + x2)*(-y + y2)**3)/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**2.5) - (3*(-x + x2)*(-y + y2))/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2))) - (((2*(-x + x2)**2*(-y + y2)**3)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)**2) - (2*(-x + x2)**2*(-y + y2))/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)))*(((-x + x2)*(-y + y2)**2)/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5) - (-x + x2)/(z*Sqrt((-x + x2)**2 + (-y + y2)**2 + z**2))))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)))**2)/(2.*Pi)
    yz = (((-3*(-x + x1)*(-y + y1)**2)/((-x + x1)**2 + (-y + y1)**2 + z**2)**2.5 + (-x + x1)/((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5 - ((-x + x1)*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5) + (-x + x1)/(z**2*Sqrt((-x + x1)**2 + (-y + y1)**2 + z**2)))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2))) - (((-2*(-x + x1)**2*(-y + y1)**2)/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**2) - (2*(-x + x1)**2*(-y + y1)**2)/(z**3*((-x + x1)**2 + (-y + y1)**2 + z**2)))*(((-x + x1)*(-y + y1)**2)/(z*((-x + x1)**2 + (-y + y1)**2 + z**2)**1.5) - (-x + x1)/(z*Sqrt((-x + x1)**2 + (-y + y1)**2 + z**2))))/(1 + ((-x + x1)**2*(-y + y1)**2)/(z**2*((-x + x1)**2 + (-y + y1)**2 + z**2)))**2 - ((-3*(-x + x2)*(-y + y1)**2)/((-x + x2)**2 + (-y + y1)**2 + z**2)**2.5 + (-x + x2)/((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5 - ((-x + x2)*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5) + (-x + x2)/(z**2*Sqrt((-x + x2)**2 + (-y + y1)**2 + z**2)))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2))) + (((-2*(-x + x2)**2*(-y + y1)**2)/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**2) - (2*(-x + x2)**2*(-y + y1)**2)/(z**3*((-x + x2)**2 + (-y + y1)**2 + z**2)))*(((-x + x2)*(-y + y1)**2)/(z*((-x + x2)**2 + (-y + y1)**2 + z**2)**1.5) - (-x + x2)/(z*Sqrt((-x + x2)**2 + (-y + y1)**2 + z**2))))/(1 + ((-x + x2)**2*(-y + y1)**2)/(z**2*((-x + x2)**2 + (-y + y1)**2 + z**2)))**2 - ((-3*(-x + x1)*(-y + y2)**2)/((-x + x1)**2 + (-y + y2)**2 + z**2)**2.5 + (-x + x1)/((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5 - ((-x + x1)*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5) + (-x + x1)/(z**2*Sqrt((-x + x1)**2 + (-y + y2)**2 + z**2)))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2))) + (((-2*(-x + x1)**2*(-y + y2)**2)/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**2) - (2*(-x + x1)**2*(-y + y2)**2)/(z**3*((-x + x1)**2 + (-y + y2)**2 + z**2)))*(((-x + x1)*(-y + y2)**2)/(z*((-x + x1)**2 + (-y + y2)**2 + z**2)**1.5) - (-x + x1)/(z*Sqrt((-x + x1)**2 + (-y + y2)**2 + z**2))))/(1 + ((-x + x1)**2*(-y + y2)**2)/(z**2*((-x + x1)**2 + (-y + y2)**2 + z**2)))**2 + ((-3*(-x + x2)*(-y + y2)**2)/((-x + x2)**2 + (-y + y2)**2 + z**2)**2.5 + (-x + x2)/((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5 - ((-x + x2)*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5) + (-x + x2)/(z**2*Sqrt((-x + x2)**2 + (-y + y2)**2 + z**2)))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2))) - (((-2*(-x + x2)**2*(-y + y2)**2)/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**2) - (2*(-x + x2)**2*(-y + y2)**2)/(z**3*((-x + x2)**2 + (-y + y2)**2 + z**2)))*(((-x + x2)*(-y + y2)**2)/(z*((-x + x2)**2 + (-y + y2)**2 + z**2)**1.5) - (-x + x2)/(z*Sqrt((-x + x2)**2 + (-y + y2)**2 + z**2))))/(1 + ((-x + x2)**2*(-y + y2)**2)/(z**2*((-x + x2)**2 + (-y + y2)**2 + z**2)))**2)/(2.*Pi)
    h1 = np.asarray([[xx,xy,xz],[xy,yy,yz],[xz,yz,-xx-yy]])
    return h1.transpose(tuple(_ for _ in range(2, h1.ndim)) + (0, 1))
